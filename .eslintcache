[{"C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\index.js":"1","C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\reportWebVitals.js":"2","C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\App.js":"3","C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\components\\CreditCardForm\\CreditCardForm.js":"4","C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\components\\CreditCardVisual\\CreditCardVisual.js":"5"},{"size":478,"mtime":1611211053273,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":211,"mtime":1611287009150,"results":"9","hashOfConfig":"7"},{"size":8738,"mtime":1612128848023,"results":"10","hashOfConfig":"7"},{"size":1269,"mtime":1611381445775,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"b6flx8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\index.js",[],["25","26"],"C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\reportWebVitals.js",[],"C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\App.js",[],"C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\components\\CreditCardForm\\CreditCardForm.js",["27","28","29"],"import React, { useState } from 'react';\r\nimport CreditCardVisual from \"../CreditCardVisual/CreditCardVisual\";\r\nimport \"./creditcardform.css\";\r\nimport visa from \"./img/visa.svg\";\r\nimport mc from \"./img/mastercard.svg\"\r\nimport ds from \"./img/discover.svg\"\r\n\r\n\r\nconst CreditCardForm = () => {\r\n\r\n    const [strings, setStrings] = useState({\r\n        ccNum: \"•••• •••• •••• ••••\",\r\n        expiry: \"--/--\",\r\n        name: \"CARDHOLDER NAME\",\r\n        cvv: \"---\"\r\n    });\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [img, setImg] = useState(\"\");\r\n\r\n    let ccNum = document.getElementById(\"ccNum\");\r\n    let expiry = document.getElementById(\"expiry\");\r\n    let fullName = document.getElementById(\"fullName\");\r\n    let cvv = document.getElementById(\"cvv\");\r\n    let info1 = document.getElementById(\"info1\");\r\n    let info2 = document.getElementById(\"info2\");\r\n    let info3 = document.getElementById(\"info3\");\r\n    let info4 = document.getElementById(\"info4\");\r\n\r\n    const cards= {\r\n        visa: <img src='/static/media/visa.9ffefcfc.svg' className=\"cc-logo\" alt='visa card logo' />,\r\n        mc: <img src=\"/static/media/mastercard.8b1d6346.svg\" className=\"cc-logo\" alt=\"mastercard logo\" />,\r\n        ds: <img src=\"/static/media/discover.42e5cc04.svg\" className=\"cc-logo\" alt=\"discover card logo\" />,\r\n        spacer: <div className=\"cc-logo\" />\r\n    }\r\n\r\n    function changeStrings(e) {\r\n        setStrings({ ...strings, [e.target.name]: e.target.value });\r\n\r\n        if (e.target.value.length === 5 && e.target.name === \"expiry\"){\r\n            expiry.style.border = \"1px solid black\";\r\n            info2.style.visibility = \"hidden\";\r\n        } else if(e.target.value.length >= 1 && e.target.name === \"name\"){\r\n            fullName.style.border = \"1px solid black\";\r\n            info3.style.visibility = \"hidden\";\r\n        } else if(e.target.value.length >= 3 && e.target.name === \"cvv\"){\r\n            cvv.style.border = \"1px solid black\";\r\n            info4.style.visibility = \"hidden\";\r\n        }\r\n    }\r\n\r\n    function changeStringsAddWhiteSpace(e) {\r\n        setStrings({ ...strings, [e.target.name]: e.target.value.replace(/(\\d{4})/g, '$1 ').replace(/(^\\s+|\\s+$)/,'')});\r\n        \r\n        let ccNum = document.getElementById(\"ccNum\");\r\n        let slicedCCNum = ccNum.value.slice(0, 1);\r\n\r\n        if (slicedCCNum === \"4\") {\r\n            setImg(cards.visa);\r\n            console.log(img);\r\n        } else if (slicedCCNum === \"5\") {\r\n            setImg(cards.mc);\r\n        } else if (slicedCCNum === \"3\") {\r\n            setImg(cards.ds);\r\n        } else {\r\n            setImg(cards.spacer);\r\n        }\r\n\r\n        //enable buttons\r\n        if(ccNum.value.length > 0) {\r\n            setDisabled(false);\r\n        } \r\n\r\n        //toggle svgs for credit card view\r\n        \r\n\r\n        //HTML5 validation ignores the maxlength property when type is number :(\r\n        //The if statement provides desired maxlength limit when type=\"number\"\r\n        if (ccNum.value.length > 15) ccNum.value = ccNum.value.slice(0, 15);\r\n        if(ccNum.value.length >= 15) { \r\n            ccNum.style.border = \"1px solid black\";\r\n            info1.style.visibility = \"hidden\";\r\n        }\r\n    }\r\n\r\n    function invalidInput(el, id) {\r\n        el.style.border = \"4px solid red\";\r\n        document.getElementById(id).style.visibility = \"visible\";\r\n    }\r\n\r\n    function resetInputStyles(el, message){\r\n        el.style.border = \"1px solid black\";\r\n        el.placeholder = message;\r\n    }\r\n\r\n    function resetAllInputStyles() {\r\n        resetInputStyles(ccNum, \"Enter Your CC Number\");\r\n        resetInputStyles(expiry, \"MM/YY\");\r\n        resetInputStyles(fullName, \"Your Name\");\r\n        resetInputStyles(cvv, \"***\");\r\n        info1.style.visibility = \"hidden\";\r\n        info2.style.visibility = \"hidden\";\r\n        info3.style.visibility = \"hidden\";\r\n        info4.style.visibility = \"hidden\";\r\n        setImg(\"\");\r\n    }\r\n    \r\n    function clearInputs(e) {\r\n        e.preventDefault();\r\n        // reset state to initial\r\n        setStrings({\r\n            ccNum: \"•••• •••• •••• ••••\",\r\n            expiry: \"--/--\",\r\n            name: \"CARDHOLDER NAME\",\r\n            cvv: \"---\"\r\n        });\r\n        //clear form inputs\r\n        ccNum.value = \"\";\r\n        expiry.value = \"\";\r\n        fullName.value = \"\";\r\n        cvv.value = \"\";\r\n        resetAllInputStyles();\r\n    }\r\n\r\n    function validateStrings(e) {\r\n        e.preventDefault();\r\n        if(ccNum.value.length < 14 || ccNum.value === null) {\r\n            invalidInput(ccNum, \"info1\");\r\n        } else if (expiry.value.length < 5){\r\n            invalidInput(expiry, \"info2\");\r\n        } else if(fullName.value.length < 2){\r\n            invalidInput(fullName, \"info3\");\r\n        } else if(cvv.value.length < 3 || cvv.value.length > 5) {\r\n            invalidInput(cvv, \"info4\")\r\n        } else {\r\n            resetAllInputStyles();\r\n            clearInputs(e);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className=\"master-container\">\r\n            <CreditCardVisual strings={strings} cardImg={img}/>\r\n            <form className=\"credit-card-form\">\r\n\r\n                <div className=\"inputs\">\r\n                    <div className=\"input-box\">\r\n                        <div className=\"row\">\r\n                            <label>CC Number</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"ccNum\"\r\n                                id=\"ccNum\"\r\n                                className=\"input-big\"\r\n                                placeholder=\"Enter Your CC Number\"\r\n                                onChange={changeStringsAddWhiteSpace}\r\n                                required\r\n                            />\r\n                            <div id=\"info1\" className=\"info\">Credit card number is too short</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>Expiration</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"expiry\"\r\n                                id=\"expiry\"\r\n                                maxLength=\"5\"\r\n                                className=\"input-small\"\r\n                                placeholder=\"MM/YY\"\r\n                                onChange={changeStrings}\r\n                                required\r\n                            />\r\n                            <div id=\"info2\" className=\"info\">Use this format: MM/YY</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"input-box\">\r\n                        <div className=\"row\">\r\n                            <label>Name On Card</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                className=\"input-big\"\r\n                                id=\"fullName\"\r\n                                placeholder=\"Your name\"\r\n                                onChange={changeStrings}\r\n                                required\r\n                            />\r\n                            <div id=\"info3\" className=\"info\">Enter your name as it appears on your card</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>CVV</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"cvv\"\r\n                                id=\"cvv\"\r\n                                className=\"input-small\"\r\n                                placeholder=\"***\"\r\n                                onChange={changeStrings}\r\n                                required\r\n                            />\r\n                            <div id=\"info4\" className=\"info\">CVV should be 3-4 digits</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"button-box\">\r\n                        <button \r\n                        id=\"submit\"\r\n                        disabled={disabled}\r\n                        onClick={(e) => validateStrings(e)}>\r\n                            Submit\r\n                        </button>\r\n                        <button \r\n                        id=\"clear\"\r\n                        disabled={disabled}\r\n                        onClick={(e) => clearInputs(e)}\r\n                        >\r\n                            Clear\r\n                        </button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CreditCardForm\r\n","C:\\Users\\18569\\Documents\\Code\\credit-card-form\\src\\components\\CreditCardVisual\\CreditCardVisual.js",[],["30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":12},{"ruleId":"36","severity":1,"message":"40","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":10},{"ruleId":"36","severity":1,"message":"41","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":10},{"ruleId":"32","replacedBy":"42"},{"ruleId":"34","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'visa' is defined but never used.","Identifier","unusedVar","'mc' is defined but never used.","'ds' is defined but never used.",["44"],["45"],"no-global-assign","no-unsafe-negation"]